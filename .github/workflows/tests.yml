name: Tests
on: [push]
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        compiler: [gcc, clang]
        # FIXME posix-lmdb-mysql
        name: [posix-lmdb-sqlite, gio-lmdb-sqlite, posix-leveldb-sqlite, posix-sqlite-sqlite, posix-lmdb-memory]
        include:
          - name: posix-lmdb-sqlite
            object: posix
            kv: lmdb
            db: sqlite
          - name: gio-lmdb-sqlite
            object: gio
            kv: lmdb
            db: sqlite
          - name: posix-leveldb-sqlite
            object: posix
            kv: leveldb
            db: sqlite
          - name: posix-sqlite-sqlite
            object: posix
            kv: sqlite
            db: sqlite
          - name: posix-lmdb-memory
            object: posix
            kv: lmdb
            db: memory
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        # We need to remove glib-network, otherwise libproxy might cause crashes.
        run: |
          sudo apt update || true
          sudo apt --yes --no-install-recommends install libglib2.0-dev libbson-dev libleveldb-dev liblmdb-dev libmongoc-dev libsqlite3-dev librados-dev libfuse-dev libmariadb-dev
          sudo apt --yes purge glib-networking
          sudo apt --yes autoremove
      - name: Configure
        env:
          CC: ${{ matrix.compiler }}
        # FIXME GCC's sanitizer seems to produce false positives regarding a stack overflow in the db client. Re-enable with newer GCC/Ubuntu.
        run: |
          JULEA_SANITIZE=''; if test "${{ matrix.compiler }}" = 'clang'; then JULEA_SANITIZE='--sanitize'; fi
          ./waf configure --debug --leveldb=/usr ${JULEA_SANITIZE}
      - name: Build
        run: |
          ./waf
      - name: Create configuration
        run: |
          . ./scripts/environment.sh
          julea-config --user --object-servers="$(hostname)" --kv-servers="$(hostname)" --db-servers="$(hostname)" --object-backend="${{ matrix.object }}" --object-component=server --object-path="/tmp/julea/object/${{ matrix.object }}" --kv-backend="${{ matrix.kv }}" --kv-component=server --kv-path="/tmp/julea/kv/${{ matrix.kv }}" --db-backend="${{ matrix.db }}" --db-component=server --db-path="/tmp/julea/db/${{ matrix.db }}"
      - name: Tests
        run: |
          ./scripts/test.sh
