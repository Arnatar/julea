#!/bin/sh
#
# (c) Anna Fuchs 2013

#debug
set -ex

msg=$(git log -1 HEAD)
name=$(hostname)

perf=$(git config --local test.performance-test-local)

if echo $msg | grep "Performance-Test: yes"
then
  perf="Performance-Test: clean"
elif echo $msg | grep "Performance-Test: parallel"
then
  perf="Performance-Test: parallel"
elif echo $msg | grep "Performance-Test: no"
then
  perf="Performance-Test: no"
fi

if echo $perf | grep "Performance-Test: no"
then
  echo "No performance test"
  exit 0
fi

rc=0
rstart=0
rstop=0

DIR_PATH=$(git rev-parse --show-toplevel)
export LD_LIBRARY_PATH="${DIR_PATH}/lib:${LD_LIBRARY_PATH}"

RESULTS_PATH=$(git config --local test.results-path)

$DIR_PATH/waf

$DIR_PATH/tools/benchmark.sh $perf $RESULTS_PATH/benchmark_local_$name --machine-readable || rc=$?

if [ $rc -ne 0 ]
then
  echo "Running benchmark failed, exit $rc"
  rm -rf $RESULTS_PATH/benchmark_local_$name/$(date '+%Y-%m')/$(date --iso-8601)-$(git describe --always)
  exit 1
fi

$DIR_PATH/tools/gnuplot.sh $RESULTS_PATH/benchmark_remote_$name
pwd=$PWD

# change repo
cd $RESULTS_PATH/benchmark_local_$name
pwd

env_arg=''

for var in $(env | grep '^GIT' | sed 's/=.*$//')
do
	env_arg="${env_arg} -u ${var}"
done

env $env_arg git checkout gnuplot/local/$name || rc=$?
if [ $rc -ne 0 ]
then 
  env $env_arg git checkout --orphan gnuplot/local/$name ||rc=$?
fi

env $env_arg git add -A .
env $env_arg git commit -m "results"

git push

# change repo
cd $pwd

exit 0